<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0515.1630                               -->
<workbook original-version='18.1' source-build='2019.2.0 (20192.19.0515.1630)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='FranceData - 2' inline='true' name='federated.0btte3k0yooemp13aydp21qbra3f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FranceData - 2' name='textscan.0r4k20x1aj9oap15dphz309xr8wv'>
            <connection class='textscan' directory='C:/Users/amahmoud5/Pictures' filename='FranceData - 2.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0r4k20x1aj9oap15dphz309xr8wv' name='FranceData - 2.csv' table='[FranceData - 2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='dt' ordinal='0' />
            <column datatype='datetime' name='dt_iso' ordinal='1' />
            <column datatype='integer' name='city_id' ordinal='2' />
            <column datatype='string' name='city_name' ordinal='3' />
            <column datatype='string' name='lat' ordinal='4' />
            <column datatype='string' name='lon' ordinal='5' />
            <column datatype='real' name='temp' ordinal='6' />
            <column datatype='real' name='temp_min' ordinal='7' />
            <column datatype='real' name='temp_max' ordinal='8' />
            <column datatype='integer' name='pressure' ordinal='9' />
            <column datatype='string' name='sea_level' ordinal='10' />
            <column datatype='string' name='grnd_level' ordinal='11' />
            <column datatype='integer' name='humidity' ordinal='12' />
            <column datatype='integer' name='wind_speed' ordinal='13' />
            <column datatype='integer' name='wind_deg' ordinal='14' />
            <column datatype='real' name='rain_1h' ordinal='15' />
            <column datatype='integer' name='rain_3h' ordinal='16' />
            <column datatype='string' name='rain_24h' ordinal='17' />
            <column datatype='string' name='rain_today' ordinal='18' />
            <column datatype='string' name='snow_1h' ordinal='19' />
            <column datatype='integer' name='snow_3h' ordinal='20' />
            <column datatype='string' name='snow_24h' ordinal='21' />
            <column datatype='string' name='snow_today' ordinal='22' />
            <column datatype='integer' name='clouds_all' ordinal='23' />
            <column datatype='integer' name='weather_id' ordinal='24' />
            <column datatype='string' name='weather_main' ordinal='25' />
            <column datatype='string' name='weather_description' ordinal='26' />
            <column datatype='string' name='weather_icon' ordinal='27' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dt]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt_iso</remote-name>
            <remote-type>135</remote-type>
            <local-name>[dt_iso]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>dt_iso</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[city_id]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>city_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_name]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>city_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>temp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_min</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_min]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>temp_min</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_max</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_max]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>temp_max</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sea_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sea_level]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>sea_level</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grnd_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[grnd_level]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>grnd_level</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[humidity]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>humidity</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wind_speed]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>wind_speed</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_deg</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wind_deg]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>wind_deg</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rain_1h</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rain_1h]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>rain_1h</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rain_3h</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rain_3h]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>rain_3h</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rain_24h</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rain_24h]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>rain_24h</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rain_today</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rain_today]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>rain_today</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>snow_1h</remote-name>
            <remote-type>129</remote-type>
            <local-name>[snow_1h]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>snow_1h</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>snow_3h</remote-name>
            <remote-type>20</remote-type>
            <local-name>[snow_3h]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>snow_3h</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>snow_24h</remote-name>
            <remote-type>129</remote-type>
            <local-name>[snow_24h]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>snow_24h</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>snow_today</remote-name>
            <remote-type>129</remote-type>
            <local-name>[snow_today]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>snow_today</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>clouds_all</remote-name>
            <remote-type>20</remote-type>
            <local-name>[clouds_all]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>clouds_all</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weather_id]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>weather_id</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_main</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weather_main]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>weather_main</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weather_description]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>weather_description</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_icon</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weather_icon]</local-name>
            <parent-name>[FranceData - 2.csv]</parent-name>
            <remote-alias>weather_icon</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:clouds_all:qk]&quot;' value='Cloud' />
          <alias key='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:humidity:qk]&quot;' value='Hum' />
          <alias key='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:pressure:qk]&quot;' value='Press' />
          <alias key='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp_max:qk]&quot;' value='Max Tem' />
          <alias key='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp_min:qk]&quot;' value='Min Temp' />
          <alias key='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]&quot;' value='Tempe' />
          <alias key='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:wind_deg:qk]&quot;' value='Wind D' />
          <alias key='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:wind_speed:qk]&quot;' value='Wind S' />
        </aliases>
      </column>
      <column caption='LocalTime' datatype='datetime' name='[Calculation_1684064790309928960]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,4,[dt_iso])' />
      </column>
      <column caption='DateLocal' datatype='date' name='[Calculation_1684064790310137858]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE([Calculation_1684064790309928960])' />
      </column>
      <column caption='Temp in C' datatype='real' name='[Calculation_1684064790340743172]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[temp]/274.15' />
      </column>
      <column caption='Min Temperature in C' datatype='real' name='[Calculation_1684064790342819846]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[temp_min]/274.15' />
      </column>
      <column caption='Max Temperature in C' datatype='real' name='[Calculation_1684064790342909959]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[temp_max]/274.15' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='City Id' datatype='integer' name='[city_id]' role='dimension' type='ordinal' />
      <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Clouds All' datatype='integer' name='[clouds_all]' role='measure' type='quantitative' />
      <column caption='Dt' datatype='integer' name='[dt]' role='measure' type='quantitative' />
      <column caption='Date' datatype='datetime' name='[dt_iso]' role='dimension' type='ordinal' />
      <column caption='Grnd Level' datatype='string' name='[grnd_level]' role='dimension' type='nominal' />
      <column caption='Humidity' datatype='integer' name='[humidity]' role='measure' type='quantitative' />
      <column caption='Lat' datatype='string' name='[lat]' role='dimension' type='nominal' />
      <column caption='Lon' datatype='string' name='[lon]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Pressure' datatype='integer' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Rain 1H' datatype='real' name='[rain_1h]' role='measure' type='quantitative' />
      <column caption='Rain 24H' datatype='string' name='[rain_24h]' role='dimension' type='nominal' />
      <column caption='Rain 3H' datatype='integer' name='[rain_3h]' role='measure' type='quantitative' />
      <column caption='Rain Today' datatype='string' name='[rain_today]' role='dimension' type='nominal' />
      <column caption='Sea Level' datatype='string' name='[sea_level]' role='dimension' type='nominal' />
      <column caption='Snow 1H' datatype='string' name='[snow_1h]' role='dimension' type='nominal' />
      <column caption='Snow 24H' datatype='string' name='[snow_24h]' role='dimension' type='nominal' />
      <column caption='Snow 3H' datatype='integer' name='[snow_3h]' role='measure' type='quantitative' />
      <column caption='Snow Today' datatype='string' name='[snow_today]' role='dimension' type='nominal' />
      <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
      <column caption='Max Temperature' datatype='real' name='[temp_max]' role='measure' type='quantitative' />
      <column caption='Min Temperature' datatype='real' name='[temp_min]' role='measure' type='quantitative' />
      <column caption='Weather Description' datatype='string' name='[weather_description]' role='dimension' type='nominal' />
      <column caption='Weather Icon' datatype='string' name='[weather_icon]' role='dimension' type='nominal' />
      <column caption='Weather Id' datatype='integer' name='[weather_id]' role='dimension' type='ordinal' />
      <column caption='Weather Main' datatype='string' name='[weather_main]' role='dimension' type='nominal' />
      <column caption='Wind Deg' datatype='integer' name='[wind_deg]' role='measure' type='quantitative' />
      <column caption='Wind Speed' datatype='integer' name='[wind_speed]' role='measure' type='quantitative' />
      <column-instance column='[clouds_all]' derivation='Attribute' name='[attr:clouds_all:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1684064790340743172]' derivation='Avg' name='[avg:Calculation_1684064790340743172:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Avg' name='[avg:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[clouds_all]' derivation='Avg' name='[avg:clouds_all:qk]' pivot='key' type='quantitative' />
      <column-instance column='[humidity]' derivation='Avg' name='[avg:humidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Avg' name='[avg:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp]' derivation='Avg' name='[avg:temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp_max]' derivation='Avg' name='[avg:temp_max:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp_min]' derivation='Avg' name='[avg:temp_min:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wind_deg]' derivation='Avg' name='[avg:wind_deg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wind_speed]' derivation='Avg' name='[avg:wind_speed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp_max]' derivation='Max' name='[max:temp_max:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp_min]' derivation='Min' name='[min:temp_min:qk]' pivot='key' type='quantitative' />
      <column-instance column='[clouds_all]' derivation='None' name='[none:clouds_all:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1684064790340743172]' derivation='Sum' name='[sum:Calculation_1684064790340743172:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1684064790342819846]' derivation='Sum' name='[sum:Calculation_1684064790342819846:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1684064790342909959]' derivation='Sum' name='[sum:Calculation_1684064790342909959:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[clouds_all]' derivation='Sum' name='[sum:clouds_all:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dt]' derivation='Sum' name='[sum:dt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[humidity]' derivation='Sum' name='[sum:humidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pressure]' derivation='Sum' name='[sum:pressure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rain_1h]' derivation='Sum' name='[sum:rain_1h:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rain_3h]' derivation='Sum' name='[sum:rain_3h:qk]' pivot='key' type='quantitative' />
      <column-instance column='[snow_3h]' derivation='Sum' name='[sum:snow_3h:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp]' derivation='Sum' name='[sum:temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp_max]' derivation='Sum' name='[sum:temp_max:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp_min]' derivation='Sum' name='[sum:temp_min:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wind_deg]' derivation='Sum' name='[sum:wind_deg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wind_speed]' derivation='Sum' name='[sum:wind_speed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1684064790309928960]' derivation='Month-Trunc' name='[tmn:Calculation_1684064790309928960:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='lon, city_name'>
          <field>[lon]</field>
          <field>[city_name]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.487023' measure-ordering='alphabetic' measure-percentage='0.512977' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[tmn:Calculation_1684064790309928960:ok]' type='palette'>
            <map to='#499894'>
              <bucket>#2019-06-09 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2019-06-21 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2019-06-05 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2019-06-13 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2019-06-10 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2019-06-06 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2019-06-19 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2019-06-02 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2019-06-22 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2019-06-17 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2019-06-07 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2019-06-14 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2019-06-15 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2019-06-18 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2019-06-20 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2019-06-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2019-06-11 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2019-06-08 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2019-06-03 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2019-06-23 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2019-06-16 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2019-06-12 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2019-06-04 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2019-06-24 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:snow_3h:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp_min:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[min:temp_min:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:temp_min:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:wind_deg:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:wind_deg:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:Calculation_1684064790340743172:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:temp:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:pressure:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:pressure:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[attr:clouds_all:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:clouds_all:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[none:clouds_all:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:clouds_all:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:rain_1h:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:wind_speed:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:wind_speed:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:Calculation_1684064790342819846:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp_max:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[max:temp_max:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:temp_max:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:rain_3h:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:dt:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:Calculation_1684064790340743172:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:Calculation_1684064790342909959:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:humidity:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:humidity:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='dt' />
        <field-sort-custom-order field='dt_iso' />
        <field-sort-custom-order field='Calculation_1684064790309928960' />
        <field-sort-custom-order field='city_id' />
        <field-sort-custom-order field='Calculation_1684064790310137858' />
        <field-sort-custom-order field='city_name' />
        <field-sort-custom-order field='lat' />
        <field-sort-custom-order field='lon' />
        <field-sort-custom-order field='temp' />
        <field-sort-custom-order field='Calculation_1684064790340743172' />
        <field-sort-custom-order field='temp_min' />
        <field-sort-custom-order field='Calculation_1684064790342819846' />
        <field-sort-custom-order field='temp_max' />
        <field-sort-custom-order field='Calculation_1684064790342909959' />
        <field-sort-custom-order field='pressure' />
        <field-sort-custom-order field='sea_level' />
        <field-sort-custom-order field='grnd_level' />
        <field-sort-custom-order field='humidity' />
        <field-sort-custom-order field='wind_speed' />
        <field-sort-custom-order field='wind_deg' />
        <field-sort-custom-order field='rain_1h' />
        <field-sort-custom-order field='rain_3h' />
        <field-sort-custom-order field='rain_24h' />
        <field-sort-custom-order field='rain_today' />
        <field-sort-custom-order field='snow_1h' />
        <field-sort-custom-order field='snow_3h' />
        <field-sort-custom-order field='snow_24h' />
        <field-sort-custom-order field='snow_today' />
        <field-sort-custom-order field='clouds_all' />
        <field-sort-custom-order field='weather_id' />
        <field-sort-custom-order field='weather_main' />
        <field-sort-custom-order field='weather_description' />
        <field-sort-custom-order field='weather_icon' />
      </field-sort-info>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Average'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='8'>June 2019 Average Temperature (Kelvin)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FranceData - 2' name='federated.0btte3k0yooemp13aydp21qbra3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0btte3k0yooemp13aydp21qbra3f'>
            <column caption='LocalTime' datatype='datetime' name='[Calculation_1684064790309928960]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,4,[dt_iso])' />
            </column>
            <column-instance column='[temp]' derivation='Avg' name='[avg:temp:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='datetime' name='[dt_iso]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1684064790309928960]' derivation='Day-Trunc' name='[tdy:Calculation_1684064790309928960:qk]' pivot='key' type='quantitative' />
            <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1684064790309928960]' derivation='Month-Trunc' name='[tmn:Calculation_1684064790309928960:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790309928960:qk]' included-values='in-range'>
            <min>#2019-06-01 00:00:00#</min>
            <max>#2019-06-24 00:00:00#</max>
          </filter>
          <filter class='categorical' column='[federated.0btte3k0yooemp13aydp21qbra3f].[tmn:Calculation_1684064790309928960:ok]'>
            <groupfilter function='member' level='[tmn:Calculation_1684064790309928960:ok]' member='#2019-06-01 00:00:00#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790309928960:qk]</column>
            <column>[federated.0btte3k0yooemp13aydp21qbra3f].[tmn:Calculation_1684064790309928960:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0btte3k0yooemp13aydp21qbra3f].[tmn:Calculation_1684064790309928960:ok]' />
              <size column='[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#1b1b1b' />
                <format attr='font-style' value='normal' />
                <format attr='text-decoration' value='none' />
                <format attr='font-family' value='Symbol' />
                <format attr='font-size' value='16' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]</field>
                  <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tmn:Calculation_1684064790309928960:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>290.08585287131007</value>
                <value>#2019-06-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
            <label-position x='-3' y='137' />
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='105.802' text-width='104'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Month of LocalTime: </run>
              <run bold='true' fontsize='8'>&lt;[federated.0btte3k0yooemp13aydp21qbra3f].[tmn:Calculation_1684064790309928960:ok]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>Avg. Temp: </run>
              <run bold='true' fontsize='8'>&lt;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]</field>
                      <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tmn:Calculation_1684064790309928960:ok]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>290.08585287131007</value>
                    <value>#2019-06-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='308' y='-309' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{9C0083E1-FAC8-4529-B11F-4E8B761E15E6}' />
    </worksheet>
    <worksheet name='Current'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Current Weather</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FranceData - 2' name='federated.0btte3k0yooemp13aydp21qbra3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0btte3k0yooemp13aydp21qbra3f'>
            <column caption='LocalTime' datatype='datetime' name='[Calculation_1684064790309928960]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,4,[dt_iso])' />
            </column>
            <column caption='DateLocal' datatype='date' name='[Calculation_1684064790310137858]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE([Calculation_1684064790309928960])' />
            </column>
            <column caption='Temp in C' datatype='real' name='[Calculation_1684064790340743172]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[temp]/274.15' />
            </column>
            <column caption='Min Temperature in C' datatype='real' name='[Calculation_1684064790342819846]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[temp_min]/274.15' />
            </column>
            <column caption='Max Temperature in C' datatype='real' name='[Calculation_1684064790342909959]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[temp_max]/274.15' />
            </column>
            <column caption='Date' datatype='datetime' name='[dt_iso]' role='dimension' type='ordinal' />
            <column caption='Humidity' datatype='integer' name='[humidity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1684064790340743172]' derivation='Sum' name='[sum:Calculation_1684064790340743172:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1684064790342819846]' derivation='Sum' name='[sum:Calculation_1684064790342819846:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1684064790342909959]' derivation='Sum' name='[sum:Calculation_1684064790342909959:qk]' pivot='key' type='quantitative' />
            <column-instance column='[humidity]' derivation='Sum' name='[sum:humidity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp]' derivation='Sum' name='[sum:temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp_max]' derivation='Sum' name='[sum:temp_max:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp_min]' derivation='Sum' name='[sum:temp_min:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wind_deg]' derivation='Sum' name='[sum:wind_deg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wind_speed]' derivation='Sum' name='[sum:wind_speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1684064790310137858]' derivation='Day-Trunc' name='[tdy:Calculation_1684064790310137858:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1684064790310137858]' derivation='Day-Trunc' name='[tdy:Calculation_1684064790310137858:qk]' pivot='key' type='quantitative' />
            <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
            <column caption='Max Temperature' datatype='real' name='[temp_max]' role='measure' type='quantitative' />
            <column caption='Min Temperature' datatype='real' name='[temp_min]' role='measure' type='quantitative' />
            <column caption='Wind Deg' datatype='integer' name='[wind_deg]' role='measure' type='quantitative' />
            <column caption='Wind Speed' datatype='integer' name='[wind_speed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:wind_deg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:wind_speed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:temp:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:Calculation_1684064790340743172:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:temp_min:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:Calculation_1684064790342819846:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:temp_max:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:Calculation_1684064790342909959:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:humidity:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:wind_deg:qk]&quot;</bucket>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:temp:qk]&quot;</bucket>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:Calculation_1684064790340743172:qk]&quot;</bucket>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:temp_min:qk]&quot;</bucket>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:Calculation_1684064790342819846:qk]&quot;</bucket>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:wind_speed:qk]&quot;</bucket>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:temp_max:qk]&quot;</bucket>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:Calculation_1684064790342909959:qk]&quot;</bucket>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[sum:humidity:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790310137858:qk]' included-values='in-range'>
            <min>#2019-06-24 00:00:00#</min>
            <max>#2019-06-24 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790310137858:qk]</column>
            <column>[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790310137858:ok]' value='129' />
            <format attr='color' value='#000000' />
            <format attr='text-align' field='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' value='left' />
            <format attr='font-weight' data-class='subtotal' field='[federated.0btte3k0yooemp13aydp21qbra3f].[Multiple Values]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' value='248' />
            <format attr='width' field='[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790310137858:ok]' value='160' />
            <format attr='background-color' field='[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790310137858:ok]' value='#c0c0c0' />
            <format attr='color' data-class='subtotal' field='[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790310137858:ok]' value='#e15759' />
            <format attr='font-weight' data-class='subtotal' field='[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790310137858:ok]' value='bold' />
            <format attr='font-weight' data-class='subtotal' field='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' value='bold' />
            <format attr='text-align' data-class='subtotal' field='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' value='center' />
            <format attr='font-size' data-class='subtotal' field='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' value='9' />
            <format attr='color' data-class='subtotal' field='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' value='#000000' />
            <format attr='background-color' field='[federated.0btte3k0yooemp13aydp21qbra3f].[sum:wind_deg:qk]' value='#000000' />
            <format attr='background-color' field='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' value='#ddebf0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0btte3k0yooemp13aydp21qbra3f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790310137858:ok] / [federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names])</rows>
        <cols />
      </table>
      <simple-id uuid='{BF5025DC-0A4E-4FCC-A380-FE3894E2105E}' />
    </worksheet>
    <worksheet name='Historical '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Historical Data for 2019 - Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FranceData - 2' name='federated.0btte3k0yooemp13aydp21qbra3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0btte3k0yooemp13aydp21qbra3f'>
            <column caption='LocalTime' datatype='datetime' name='[Calculation_1684064790309928960]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,4,[dt_iso])' />
            </column>
            <column-instance column='[clouds_all]' derivation='Avg' name='[avg:clouds_all:qk]' pivot='key' type='quantitative' />
            <column-instance column='[humidity]' derivation='Avg' name='[avg:humidity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pressure]' derivation='Avg' name='[avg:pressure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp]' derivation='Avg' name='[avg:temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp_max]' derivation='Avg' name='[avg:temp_max:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp_min]' derivation='Avg' name='[avg:temp_min:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wind_deg]' derivation='Avg' name='[avg:wind_deg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wind_speed]' derivation='Avg' name='[avg:wind_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Clouds All' datatype='integer' name='[clouds_all]' role='measure' type='quantitative' />
            <column caption='Date' datatype='datetime' name='[dt_iso]' role='dimension' type='ordinal' />
            <column caption='Humidity' datatype='integer' name='[humidity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1684064790309928960]' derivation='Month' name='[mn:Calculation_1684064790309928960:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1684064790309928960]' derivation='None' name='[none:Calculation_1684064790309928960:qk]' pivot='key' type='quantitative' />
            <column caption='Pressure' datatype='integer' name='[pressure]' role='measure' type='quantitative' />
            <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
            <column caption='Max Temperature' datatype='real' name='[temp_max]' role='measure' type='quantitative' />
            <column caption='Min Temperature' datatype='real' name='[temp_min]' role='measure' type='quantitative' />
            <column caption='Wind Deg' datatype='integer' name='[wind_deg]' role='measure' type='quantitative' />
            <column caption='Wind Speed' datatype='integer' name='[wind_speed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:clouds_all:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:humidity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp_max:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp_min:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:pressure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:wind_deg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:wind_speed:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0btte3k0yooemp13aydp21qbra3f].[none:Calculation_1684064790309928960:qk]' included-values='in-range'>
            <min>#2019-01-01 04:00:00#</min>
            <max>#2019-06-24 04:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0btte3k0yooemp13aydp21qbra3f].[none:Calculation_1684064790309928960:qk]</column>
            <column>[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0btte3k0yooemp13aydp21qbra3f].[Multiple Values]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0btte3k0yooemp13aydp21qbra3f].[mn:Calculation_1684064790309928960:ok]' value='97' />
            <format attr='width' value='358' />
            <format attr='width' field='[federated.0btte3k0yooemp13aydp21qbra3f].[none:Calculation_1684064790309928960:qk]' value='97' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' value='252' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0btte3k0yooemp13aydp21qbra3f].[mn:Calculation_1684064790309928960:ok] / [federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names])</rows>
        <cols>[federated.0btte3k0yooemp13aydp21qbra3f].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{D2C4CAD9-44A3-48D0-8983-2CED9E5EC7AB}' />
    </worksheet>
    <worksheet name='Historical Sheet'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>June 2019 Historical Data - Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FranceData - 2' name='federated.0btte3k0yooemp13aydp21qbra3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0btte3k0yooemp13aydp21qbra3f'>
            <column caption='LocalTime' datatype='datetime' name='[Calculation_1684064790309928960]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,4,[dt_iso])' />
            </column>
            <column-instance column='[clouds_all]' derivation='Avg' name='[avg:clouds_all:qk]' pivot='key' type='quantitative' />
            <column-instance column='[humidity]' derivation='Avg' name='[avg:humidity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pressure]' derivation='Avg' name='[avg:pressure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp]' derivation='Avg' name='[avg:temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp_max]' derivation='Avg' name='[avg:temp_max:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp_min]' derivation='Avg' name='[avg:temp_min:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wind_deg]' derivation='Avg' name='[avg:wind_deg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wind_speed]' derivation='Avg' name='[avg:wind_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Clouds All' datatype='integer' name='[clouds_all]' role='measure' type='quantitative' />
            <column caption='Date' datatype='datetime' name='[dt_iso]' role='dimension' type='ordinal' />
            <column caption='Humidity' datatype='integer' name='[humidity]' role='measure' type='quantitative' />
            <column caption='Pressure' datatype='integer' name='[pressure]' role='measure' type='quantitative' />
            <column-instance column='[humidity]' derivation='Sum' name='[sum:humidity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1684064790309928960]' derivation='Day-Trunc' name='[tdy:Calculation_1684064790309928960:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1684064790309928960]' derivation='Day-Trunc' name='[tdy:Calculation_1684064790309928960:qk]' pivot='key' type='quantitative' />
            <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
            <column caption='Max Temperature' datatype='real' name='[temp_max]' role='measure' type='quantitative' />
            <column caption='Min Temperature' datatype='real' name='[temp_min]' role='measure' type='quantitative' />
            <column caption='Wind Deg' datatype='integer' name='[wind_deg]' role='measure' type='quantitative' />
            <column caption='Wind Speed' datatype='integer' name='[wind_speed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:clouds_all:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:humidity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp_max:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp_min:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:pressure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:wind_deg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:wind_speed:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0btte3k0yooemp13aydp21qbra3f].[sum:humidity:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790309928960:qk]' included-values='in-range'>
            <min>#2019-06-01 00:00:00#</min>
            <max>#2019-06-24 00:00:00#</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790309928960:ok]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0btte3k0yooemp13aydp21qbra3f].[avg:clouds_all:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790309928960:qk]</column>
            <column>[federated.0btte3k0yooemp13aydp21qbra3f].[sum:humidity:qk]</column>
            <column>[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp_min:qk]' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0btte3k0yooemp13aydp21qbra3f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790309928960:ok]</rows>
        <cols>[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{015FB35B-5EF9-4AF4-B6D9-98C4A1DB280B}' />
    </worksheet>
    <worksheet name='MinMax'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='11'>Lowest and Highest Temperature</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FranceData - 2' name='federated.0btte3k0yooemp13aydp21qbra3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0btte3k0yooemp13aydp21qbra3f'>
            <column caption='LocalTime' datatype='datetime' name='[Calculation_1684064790309928960]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,4,[dt_iso])' />
            </column>
            <column caption='Date' datatype='datetime' name='[dt_iso]' role='dimension' type='ordinal' />
            <column-instance column='[temp_max]' derivation='Max' name='[max:temp_max:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1684064790309928960]' derivation='MDY' name='[md:Calculation_1684064790309928960:ok]' pivot='key' type='ordinal' />
            <column-instance column='[temp_min]' derivation='Min' name='[min:temp_min:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1684064790309928960]' derivation='None' name='[none:Calculation_1684064790309928960:qk]' pivot='key' type='quantitative' />
            <column caption='Max Temperature' datatype='real' name='[temp_max]' role='measure' type='quantitative' />
            <column caption='Min Temperature' datatype='real' name='[temp_min]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[max:temp_max:qk]&quot;</bucket>
              <bucket>&quot;[federated.0btte3k0yooemp13aydp21qbra3f].[min:temp_min:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0btte3k0yooemp13aydp21qbra3f].[none:Calculation_1684064790309928960:qk]' included-values='in-range'>
            <min>#2019-06-01 04:00:00#</min>
            <max>#2019-06-24 04:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0btte3k0yooemp13aydp21qbra3f].[none:Calculation_1684064790309928960:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0btte3k0yooemp13aydp21qbra3f].[max:temp_max:qk]' field-type='quantitative' max='350.42890909090909' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0btte3k0yooemp13aydp21qbra3f].[min:temp_min:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0btte3k0yooemp13aydp21qbra3f].[min:temp_min:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[federated.0btte3k0yooemp13aydp21qbra3f].[max:temp_max:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.0btte3k0yooemp13aydp21qbra3f].[min:temp_min:qk]' scope='cols' value='Temperature' />
            <format attr='title' class='0' field='[federated.0btte3k0yooemp13aydp21qbra3f].[max:temp_max:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0btte3k0yooemp13aydp21qbra3f].[md:Calculation_1684064790309928960:ok]' value='30' />
            <format attr='text-align' field='[federated.0btte3k0yooemp13aydp21qbra3f].[md:Calculation_1684064790309928960:ok]' value='left' />
            <format attr='font-weight' field='[federated.0btte3k0yooemp13aydp21qbra3f].[md:Calculation_1684064790309928960:ok]' value='bold' />
            <format attr='font-size' field='[federated.0btte3k0yooemp13aydp21qbra3f].[md:Calculation_1684064790309928960:ok]' value='8' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0btte3k0yooemp13aydp21qbra3f].[md:Calculation_1684064790309928960:ok]' value='184' />
            <format attr='background-color' field='[federated.0btte3k0yooemp13aydp21qbra3f].[md:Calculation_1684064790309928960:ok]' value='#ffffff' />
            <format attr='text-align' data-class='subtotal' field='[federated.0btte3k0yooemp13aydp21qbra3f].[md:Calculation_1684064790309928960:ok]' value='left' />
            <format attr='text-orientation' data-class='subtotal' field='[federated.0btte3k0yooemp13aydp21qbra3f].[md:Calculation_1684064790309928960:ok]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0btte3k0yooemp13aydp21qbra3f].[max:temp_max:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.637182354927063' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0btte3k0yooemp13aydp21qbra3f].[max:temp_max:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3513259887695313' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0btte3k0yooemp13aydp21qbra3f].[min:temp_min:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3513259887695313' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0btte3k0yooemp13aydp21qbra3f].[md:Calculation_1684064790309928960:ok]</rows>
        <cols>([federated.0btte3k0yooemp13aydp21qbra3f].[max:temp_max:qk] + [federated.0btte3k0yooemp13aydp21qbra3f].[min:temp_min:qk])</cols>
      </table>
      <simple-id uuid='{5952FC5E-3D9B-4F46-9A09-038F600578C6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='273' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='1037' id='3' type='title' w='98426' x='787' y='830' />
            <zone fixed-size='96' h='9959' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='1867' />
            <zone h='87344' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='11826'>
              <flipboard active-id='5' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='France Historical   - Average' captured-sheet='Historical Sheet' id='1' />
                  <story-point caption='Historical - Average' captured-sheet='Historical ' id='5' />
                  <story-point caption='Current Weather' captured-sheet='Current' id='2' />
                  <story-point caption='Highest &amp; Lowest Temp' captured-sheet='MinMax' id='3'>
                    <capturedDeltas>
                      <worksheet name='MinMax'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Average Temp ' captured-sheet='Average' id='4'>
                    <capturedDeltas>
                      <worksheet name='Average'>
                        <annotations>
                          <annotation class='point' delta-type='edited' id='2' mark-position='1' pullback='245.392' text-width='104'>
                            <formatted-text>
                              <run fontcolor='#787878' fontsize='8'>Month of LocalTime: </run>
                              <run bold='true' fontsize='8'>&lt;[federated.0btte3k0yooemp13aydp21qbra3f].[tmn:Calculation_1684064790309928960:ok]&gt;</run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#787878' fontsize='8'>Avg. Temp: </run>
                              <run bold='true' fontsize='8'>&lt;[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]&gt;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields />
                                      <y-fields />
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]</field>
                                      <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tmn:Calculation_1684064790309928960:ok]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>290.08585287131007</value>
                                    <value>#2019-06-01 00:00:00#</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='359' y='-316' />
                          </annotation>
                        </annotations>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{2E63FB0F-0379-4A09-98B6-0F0BD49161E1}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' maximized='true' name='MinMax'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='215'>
            <card pane-specification-id='8' param='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[Multiple Values]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[md:Calculation_1684064790309928960:ok]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[mn:Calculation_1684064790309928960:ok]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[none:sea_level:nk]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[none:snow_24h:nk]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[none:snow_today:nk]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[none:weather_description:nk]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[none:weather_icon:nk]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[none:weather_id:ok]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[sum:temp_max:qk]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790309928960:ok]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790309928960:qk]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790310137858:qk]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tyr:Calculation_1684064790309928960:qk]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[yr:Calculation_1684064790310137858:ok]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[yr:dt_iso:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41C69C2C-1B24-4C40-A767-7681F9BD409F}' />
    </window>
    <window class='worksheet' name='Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0btte3k0yooemp13aydp21qbra3f].[tmn:Calculation_1684064790309928960:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.0btte3k0yooemp13aydp21qbra3f].[avg:temp:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tmn:Calculation_1684064790309928960:ok]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tyr:Calculation_1684064790309928960:qk]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[yr:dt_iso:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CA1700E-DE79-4AB8-99E2-7D9D25109A3D}' />
    </window>
    <window class='worksheet' name='Current'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[none:city_id:ok]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790310137858:ok]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[yr:Calculation_1684064790310137858:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{72FEE95A-56BF-4A4F-83AF-BB7AB2D07700}' />
    </window>
    <window class='worksheet' name='Historical '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0btte3k0yooemp13aydp21qbra3f].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[mn:Calculation_1684064790309928960:ok]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tyr:Calculation_1684064790309928960:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2767E712-B6FD-46EA-AD68-6CBCB942DA59}' />
    </window>
    <window class='worksheet' name='Historical Sheet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.0btte3k0yooemp13aydp21qbra3f].[sum:humidity:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[:Measure Names]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790309928960:ok]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tdy:Calculation_1684064790309928960:qk]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[tyr:Calculation_1684064790309928960:qk]</field>
            <field>[federated.0btte3k0yooemp13aydp21qbra3f].[yr:Calculation_1684064790310137858:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB02EF72-73C0-43DC-B185-44E19FE2DEC3}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{5B4D2D97-9DC2-4886-B270-F81A29D3BB9B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Current' width='192'>
      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
      FP+/AIGgTxxQWwqSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Historical ' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Historical Sheet' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MinMax' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9WYxl2Zrf9dt7n3meYp7nMYeIzKysunVv38aSxWDUgABLlgDBExJPvCAh
      IYRkQGoJSyBkhIwEjSVsjC1MG6O2UVv07XZ3VWVmZGbMESdOjOfEmed52gMPJyoq41ZGVuW5
      dbIqbu7fQ1Xmyf2ttXac+PZe67++9X2CpmkaOjofKeKPPQAdnR+Tj8YB6vU6+stO59f5aByg
      2Wz+2EPQ+Qny0TiAjs7b0B1A56PG8GMPQEfnbZSzSYJnEQD6hieYGO77wdouZVNoVjdum1l3
      AJ2fJu1mjeDLXxEsO/mr/1o/6egpx7EyTx7d5/z4gEw6x/DYKOFYlqePVzkJHpEpVHn05AlK
      Nc3r/XMef/KEeDRBpVxgfNDD650QD5485f/7B39A0jrNX/0r/4LuADo/TXzDU/zuZ+sYMgFW
      J938V7//P7A44aUgm3n9R3/Aw8cP+Ed//JxRcw7H0BB/+L//Qz55OMHf+6MGpeCfMb84z9/7
      v6vs/vM/5i//238NsXlGLhPmf/7fYswbjZitVqR6Ul8D6NwBmkUKNRXP4Dgui0jf2By/+PwJ
      9+49ZnV+lLasMTazxOdPH9FqlMjny5gdfob8dubWf8G/9Pkqu3tHjE/PgNxkdHSE2aX7eO0m
      3QF0frqYHV4GfA5wjPLL+wM829jBYrUyMjKCZLQx2O/B0z+C0yJxuPEn/M2/80/5y7/7S/7F
      v/QZX3z5HNFkZWy4HxDxOST+/NkOw8NDzNxf4y/+8H/luGJD+FhCIQqFAm63G0EQfuyh6PzA
      yK08f/fv/4p/79/5N97bVncAnY8afQqk81GjO4DOR43uADofNR+ZA2jEwqfsHYSQ1XcvfQqZ
      ONtb2ySzRVS5wf7ONpFE9nv1kkuEiaYLqHKL4P4O59HU9xiaSvj0iP3DYxRNI3l5xs5+kLby
      7nGqcovQwR6HoXNUTSMTD7O9e0BTVm+3UdqcnxxRbwOawklwn9DZJZrGO+01VSZyGqTS6rRx
      Fjpkdz9IS1bJp6Jsbe9RbytvuTeNcj5NJP7NzyFxcUS61ERuVtnb3SaWLrx1rO1mndDJKZrW
      6f/k6IDgSRhNU4mchdg/OkN9yzJWbjc5OTlBVjXK+RTb29ukcmU0pd35Ti6TaHxkDtCq5ojm
      2oz5JA7Oku+8tq1KrKwuc3J0wMH2NsOzi+QuQ9Ta7/6F1JQGR6dnpJMZzoJ7uIdnqCZOKTZv
      /4UESEdOaJv9zE+PIddyXGSaTA852T+6eKdd/CKE0T+GW8txEs9yEsuzMBlgd//4VptKsUCl
      kKbShtR5ENU5hLGRIZZOEYoUmBsPsHd48i27aqlItZCi2IR2s4F3YJxxv4HgcZjDsyRL82Ps
      7Ox/u0O1Tb7SIpuKAdCq5omcnxDL1wnu7TMyvUj4+JC3/YQK+TyZbAYNuDw+xBIYY3JskHo+
      RrZhot9cJxQrfsuumM+Ry6WRVdg/PGVlZZnT4D6nBzu4RmappMOUGvLH5QDtSgGrtw9Xfz+N
      bO6d1wYCPvY2N+gfnaKmgMdqwuWwUq233ml3tL/P3NISAlBptvE6rPh9DgrlxjvtEqkkhdQl
      L56/IJFK4/L4sbn6aNXz77TzB/o43dtkP1wgYG1js3swO/pQmm9/ogK4fH343Q4AsoUGA30u
      /H1ecpdRzB4/VocbuV79lp3D46fP6wLAbHNiUMpshVJMDNoxOVyYzE6Q33KfkonxsREkUQA0
      gqEz5manAKgq4LaZ8EgSlbeMtW9wGKfVDEAsmSZ9ecqzL5+TLRRx+wMEBvsppr/9M/L3D+G2
      Wzv3axXY2NhAtHnI1hUG3Vb8djulevPjcgCj3UW7UqBRKGByu9957eaLZwzPP2BmbACzKFCT
      Fer1FlaL8XYjtUW2UOE8FOQ8HEESJarNNuVyA6fd8s7+3E4XgxOzLE72U2mK1Kpl2o0SBpPz
      nXaRSJjVR095ujrKebxBs1lFaZURDY532n2Nx2EiX2pQKVZwDw4iV0u0m3UM5nePt1XOsHkU
      5/PPP8XpsKM06ihKC0F6x88HkBtliuUax8enhC8uMEtQaytU0LB/11hdTsZmFpnwGmganNTK
      Jcq5PA7fu7/LfF3lySefINRzOI0i+bpMudnAYTZ9ZPsALhfnx0EKdYWV1WVM0u3+v7nxJYLR
      hsXpY2bEy87eEU7/ILMTw9/Zl9yqksrVGfDZ2NsPYnYFWJgee6eNprY53D+gLZhYXlogehok
      W2myvHofi+H2vYtWvcRh8BRVNLC0vEL68phUvsriyj1sJumtNpl4mLOLCILFw+ryLKeHB6gm
      J8sLM8TOQ6QLNeaXV7Cbb4aK5VNRTs7OUY0uxvqcRJI5zEaJ0ak52sUEsXSR2aVVXNabTqC0
      ahwchihVKoxNLzI26Ecup0nJDvymJgdHp7gDI0yNDXxrrJHTIJFEBqenn8XZUYIHQbC4WJmf
      4PjwgKoscW9l8ert8g2xi2PCsST+4WmcYp1EtoTLP8jkoJud3QMsrgDzM+MfmQPoG2E6v8ZH
      NQXqlm6fEXfJ7rd9rLfZ6A7wPVCUt0h7v0V2AKr6bpXqh+6zW7sfepzXk7x6vf5bfXC8Wq2i
      aVpXUyBFUZCkt8+nfxvsNE1DVdU7MVZVVREE4b2/x9v6+zBrAE0jfHnJ+Ni7F4Jv0qgUCZ5F
      WV1dRnrjXovZJBeXCUx2DwvTw+zt7CFYXCzNT1NMR0mWZBZnJ0jHwlwmMwyNzzHod1IoFPjP
      /uAv+I79r1uG353j3BW7K2O4C2PVNECA9zS9rb8PdiIsnkhiM2jY+8aJR04Z9DnYPbpEECUe
      rt3j7HCXclNg9d4KZoNIvdkGuYmqccMBJJONlXv32Hn5nOPdHJ7JJdTEEYlCFSNGGtU8oHAR
      y7C+dp+vnr9k4LOnAEQzZT6OJb/O9+WDrgEqpTxtBdKZDO1Gjf7RGSZcEvFMklxNYtxn4CiS
      AcDrD2AyfPuVZbdbCe2+xugZpt5U8LvMuFx2quUGfX0BOmqYiElosb27T7lSf+sOo44OfIA3
      gKooqEoTTTCApqEqMrVag85rrDOXE0SJUi5DwTVAf8D2rTbkVoO2JmE1GwntbeIYnmc04CJ5
      XCKerkC+hGt05A0LgYXVNQyiSlsO8v4zTZ2PhZ6vAWrFLKGLGDPzixjkCkenlxisdmZGAjQ1
      M4Z2Gc3uoxA7I1duMjU7h8NiIHx6RDJTxOT0YW0X8U+v4neYOQ/tU6y1EYwWlhdmODsKIlg9
      zIz3cbB3SKXeJDA0htvYJpouMj27gMNqpFAo8Ke7ia7uQVVVRPH9X5Z3xa5jqyGK7z8n//D3
      qF0tgn+Y/u7ARpiGonSnULzJb7IRJssyBsP7vyzvip2maSiKcifGKssykiS99/d4W38fZhGs
      aSTTaQb6+7+vAZVClrNwjP6RSQb8rut/adZKnJxeYPcNMD7k5yx0BFYPU6NDNGslUoUa4yOD
      VPJpTiNxJmYWcNs7wVT/5d/+M7rxdk1VEbp4Wt0VOzQNDbpTcz70PWpaRwB6z7He1t8HU4HO
      L8KYJQ2re4BMKobfZeUsnKClCqwuzxO7OKHYgMWFWQwi1BoySysrPPvqGQOf/+y6nUqlzszC
      MnuvnkEpieIZh/QxabeHRjZDqlBlfKSP/aMz1tbu82xji5//7BMAXoXiugqkc4MPqgIVMgma
      ClxGL2lWCwhWP/3GNvF8lnQZJrwSx7E8INA30Mfx3mt8QxM32vD19ZM8PwR7gEK5yeiAi0DA
      Q7FQY3xyEpMkACKS1uL49IJarUb3+6M6v+30/A2gaRpoCt/sXGhX29kiFqsFgyLSVmRi4TNE
      JcDAeB+gsff6Bb6JFYZ8DjRVRUNAFAXCR9s0rYOszfZzebBJvtJGrdSx+Yfe6FXg4eNPacst
      yuWKHu+hcys9d4BqMUPoNMzMwjJmucTx/jZIFkw2J07NhFnyYXb1sTg7TKWhYDYZQVNRVJH0
      5SnFvBtTPYN1dJlhr41GW6XRSLBTKbA8v8L+zi6CxcWKx8D+7i6lUpnTSAIrNZLZItPzS9eu
      9688netqDXBX1JzuVSDtaqf0pz9WTVOv1irvtwa40ypQo9HEYnn3AY3vQleBbkdXgXqNplEs
      lXB/xymsNykX0lzGs4xNTuOwfvPLryptzk5OcPWN0Od1krg8B4uHwYAHTW2TzVcI+L206xVO
      wzEmZ2YxGzqe/z/945ddDb97jfxu2Glaxwnuwli73wd4e38fTAU6PAqxsjCD2e6lWMjisptJ
      pbKUmyoLs5Pkk1GyNZXZqTFEAZptmJoa58XGK37x80+v20nGovSNTBDcfoU86COjeRGSQYzW
      h+QuQmRrCgG/m9dbu6ysLPLixSt+/tljAP7Js2NdBdK5wQddH2biYeoynJyeUC+mSFfA0S6R
      LOY5iRbxGeqcJoqAgMMisfX6Fa7AzWNyg6MTtEopVJOTVKbKzNQAI0MB8rkqc0vL3xwD1BSq
      jTbthq4C6dzOB3EA7a1LTwmvz4vFZKDVrJNOJohmK5hEQNMwO7w8evyEav5mTp3kxRGXBYUn
      6/dwmkWqTZVms4XJYnrjKpG19TXkVguT1aKrQDq30vMpUCWf4uj0gtHJeWxqkaO9TSoNBYPZ
      ilUzYFIdSK5+JkeStFUBm9UMmkpwf5eGrOEJ9BM+3ELsn2XUZyeVyYHRxu7BEYsL82xtvUIy
      2bg/bmJ/d5dMJstpJIFFrZDKlZicnr/WC9bnh7qaAt2VuP7f5DzAXRnrD213J1SgUqmM0+nq
      5rzGNboKdDsfswr0wU6ENZrvL2W2GjUUwYjV/E2aDU1VyOfymO1O7FYz5WIejFacNguaplCr
      t7DbrCjtJvliGY/Pj0EUrqNBu9oHUFTEd6RQuet2aKBqXer5H3ismqp29iveVwW6pb8PpgJt
      7ezyYHUJo9lOvVbBYjZSLleoNhVGBvuolvKUGhpD/X4EATRNYX/jz6h7V/hs5ZujlInLC1qC
      ieDREfOTg5yk24j1HPMPH5E8DZIsy/z86UO2Nl8T6Ovn+CLGp4/uA/AH/2RTV4F0bvBB14eJ
      8DHVNuwd7FPNRQmep6kmwqQrZXYPz2nlL4lkyp1rz4/pG51G/LVX3dD4NP1uC4pg5DKaY+Xe
      PNNjfaSzVeaWVq6SMqk0WyrDYxO0q0VdBdK5lR9VBRocHsbntFKvFsnlShSrTVqtFqrcZHMv
      SDoRJXJ2RvsNq3zinM2jGJ8+fYzNINBWNBRZQbpxfFJi7cESB/sHqJJRV4F0buXDqEAnFwSG
      JrBTIri7SbZQQ5w2YFRFJKMJq7OPoUAMTTTicdoQDWb+5X/196CaRkwoZM8OUdxjjPjsHJ+c
      Y3F42T88Yn5uilcvXiAZjaw9NLO/u0MslsDhDWBRKyjtJqPjU9fTxZGAU1eBfiJ9dm139f/3
      tbzTKlAmncEX6KOLnfNrdBXodnQVqNd0ceLozWG9affrn3/999v+/PXfC4UCh9HK+z86uDsJ
      rrq1Q7uKluxClfngibEUFUH84RJjfTAV6PnGSx6vPUCQjChyG0kSabfayKqGzWpBbrdoKxpW
      iwVBgJ0XXyCbnXh9/UyNDV63Ew+fkCpUKZVrrC1N8OoggojM+idPiYb2iBdlfvmzdXZePUdB
      RDG6eHx/AYDf/7t/rqtAOjf4oOvDyMk+lRa82nxNOX3Bs1f77L9+Rb5eY2PjFaH9bZLFGgBN
      pVO9w+64mTV+eGKW5fkZjJLI2UmM9c8+YXmyn2SmwvzyPbwOM6BSbws8WHtEq5LV8wLp3MoH
      UoHehsT49CyTAx7KpSz5YhNNlckVOnVCnnz2S+7fW+b4cO+GVTWf4MXmAffW1jF+nTLuWx1I
      zE+PsLu3R/07ShrpfNx8IBXoHKdvCJNY5mBnk1gyz+LEAMJVmkejLYDfHQGDlX6fEzSF4P4e
      9ZaMyeomFzujYeln2Gdn8/UmFu8gp6enzEwP8/LLZ0iCxvrjcfZ3dzg/D1+pQHWUdouhkbFr
      LzeI4lsLqul8vNwJFSh2ecnAyNiNHKHvi64C3Y6uAn0EFAoFCvXuMiB/e6Ptt8vuN0qP/qHv
      UVEQRfH9VaBb+vtgRyI3t3d4+OD+9zZJhI+JZsr4+oeZGv3mUEw8fEIiV6bZUnm4PMHG9jGS
      KLL+ZJ3Lo31SVY3PHt8nuPuaalPG6Ozn3nwntcp//Df/X10F0rnBB1OBmq0WF6Edyk3YePmS
      UuqcX/3ZM/75r/6MUqPJsy/+nK+++IJcpQmawnkkgcVkwOW8WSVxYHSKB/dWEJQGoYMz7n3y
      hNlhF7F0hcn5JewmEZAp1VXW1h9Tyyd0FUjnVj6oCtTJ7wOKqqBpApPzSyyO+skXkmQKbcyS
      TDiRA02l0dKYX1xkf+f1jbbkeokvv3zOzMpDRAEMooAkSaiKinQdzmtgpN/F1vYuhcq76/Pq
      fNz03AHqlSJnJ0HMdi+SJBINn5FI3SxsbLB66fc78faNMD7gAdHAgM/K+UUEg8lKORMndbU/
      8PrlBn3Do9QrJcbH+9jdOuDkMkO/30bs8pJ0Ok06V8RotuFxWhgcGtGD4XRupeeLYLndpFxt
      4Ha7QFUolSuYzBYsJgMqIoKqgGRAbtapN2VcbieiIKCpCqVSCavDRTx8xuDENGZJpF4tU2+2
      EUQJt9tFo1oGyYzNYqBQKKJqYDRbMBsEqvUWbrcL8SoUos27izjfxl0Jaeg6FOJH6LN7O/Vq
      EfzD9PdRqUBmq12XQd/CXZJBu1WBfvTEWIdHRywuLHy/61WF0NEBtaZMttTgL/3im7xA6eg5
      l+kCqmDk/uI4rzcPEI0WHjxcJXkeIlnReHR/kfPQPrlSFWffGHPjnViiv/bX/09dBdK5wQeb
      HhdLZaLnQaot2NndpZy95M+/eMGXf/EVtXabzY1nPH/+gnKjDaLE3OIq8+N9+PqGb7Tj6R/h
      4YP7aI0Sod0g0w8eMeo1Es9W8A2OYUQGFDLFBmvrj8nFL7o6B6zzcfBB14ftZgNFg1q9hior
      jE4vMDvgIJ1NEEvXMWs1guH09fWHJ5cszo7eaENC5sWXXzAwuYiigc0sYjabaDVkbNcpFEV8
      DiNb2zsUynqRPJ3b6fkUqN1sUKsWEYw2BNpUK0Uy2QKMf725JSCZnQQCXsanh8DY0f0bpRSa
      JYDZINIo56hhw+e0sP3qJZNLD3BajThlF6GTGFIpy8jiGI1Gg1arRbMl4x8cJYCMrEl6kTyd
      W+n5IrhZKxFJ5JmaHAelyUU4htPrw+uwIGNAVJpoJhvNYpp0scHExBgGUaBRq4DRisUocnyw
      x9DMEnaTRCZxSbZYRTSamZ6cIJu4BIubfo+V05Nz2qqK3e3HaxVIZCtMTI5fp0WJ5Jp0cyLm
      7igk3apA2lX68J/+WFVVQRTE9w5p0VUgPRjuVu6SCnRn06OfXVwwNTn5vU0SkVMS2SLuvlGm
      RvquP88lLwnHMxjMDpbnx9je3EEwO7m3skA2dk6irHJvcZpE+IRYOk//2Cyj/R4A/oPf/0fd
      hUNfhW3/VtvxI/T5Icd6S38f7EhkKp3BbgRn/ySXFyGGA052glFEQeDBowec7m9TbQus3LuH
      1QjhWJbHTx7x4vnGDQewuvw86B9h6+UzjraLDC4+QIkHieXK2G0e1OwloBBNlVh/tM5Xz54z
      0t+RUQuVhi6D6tzgg6pAtUqRtgq5fB652WRwfJZJr4lkNkm6pDHggKNwBjQRu0llY+MFks1z
      ow2zycDu6xdYA+O0ZQ23zYDNbqVea+H1uK6cXMRqVNja3qVUaegqkM6t9PwNoMgyqlxHE4yd
      uabcolSqdv5R6JzuFyQTSquBYBliyGkHtU2+pvHZp4/54stntBsjNDUjDquJ4O4m/dMrDHjs
      pLU8kXgRIVvEM/mmXCowObeMSdJoyZquAuncSs8XwfVSjlA4wfzCAmK7ytFpBKvTzVi/h5Zm
      wiBXUa1uKqkIqUKdmblZrCaJUi7N+WWC4YkZsheHDMzex2MzEjk7IleqIxgtLC/McnkaApuX
      iSEvB3uH1FttvP0jeC0ql6kis3PzWE0ShUKBjeMsXalAqoLUjUJyR+w0NFRVeyOatvd9dmun
      qldpUd7ze7ytP10F+h7cFTVHV4Hev78PpgLFEgmGh4a++9qOAblklHA8y+TsAh7HN2nVq6Uc
      ZxeXWF0Bpsf6OTo8QLB4mJsao1rMkCw2mZkYoZCOcxFNMjo9j99lA+A//Vv/rLvUiGjv/cS5
      S3Y/Rp/d23UrHr29vw+mAkUuo1gkDZtvmFQ8TJ/HztFpDAWR+/eWiJwEKTVgeXkBIzInlxnW
      7i/xbGOLzz/75LqdtqyxsLzK7stnnFXTmPpn0FIhkiU/aqVOIV+AiUFCZ1HW1u/z7MVrPv/s
      KQDBSFZXgXRu8EFVoFI+TUuBeCJBq1bG7htm2KoSz6XJ1w1M95sJRfMgSAjtKrsHR1RrtRtt
      uL1ewsFtROcAlWqbQb8dn9dFuVhneGQEoygAIgatye7eIZVKXU+PrnMrPX8DqKqKprbp+JqG
      pim0Wm1AwGA0IjVFWppGLHyGpPXRP9oHosTDx58goPJq6wBVbqMgYjRInB1sIXoneDDkIxYs
      ky400EpVHANvRo0K3Hv0FBGVl/KergLp3ErPHaBeyhE6v2RheQWjXCYU3MPu9GK2u3FrJkzG
      ABZngNXFcYq1NjZrp9pjOh4hlauwsLzM6cE2zvEVBtwSqiBRTUXYzqdZnl/m6GAfweJmzCWx
      v7tLtVrlNJLAITaIZ0rMLixdj+Xf+uVyV/fQiZPpogzQHbH7Mfrs2k5TO9L5e64EbuvvDqhA
      Gq1WG5PJ9N2XvgNdBbodXQXqAUqrRrkp4nF+38J4GnKrSaZQYbA/QKteIXQSZmp+Htsbv/xK
      u0HoKISrf4yhgJvL8xBYfYwOBFDlBqlchaGBAI1KgePzKNPzi9fFs/+7f/BVV4tgVdO+Varp
      t8kOui9Y8aHH+kOPs2cO0KpkiWSNyC0DAZ+fZDqNWdTI5AtIFjcTw35OQkdYPYOMDPgRNIWL
      iwiZcoXBPh+bm9vce/iAzddbfPb00XW7mXSaibkl9l49Qy16qJgHERKnZB0OitEzMpU2QwM+
      tnYPWXt4j2cbL/nFzzoq0p9uXegqkM4Neq4CxWIxAM4vwqSiYVwDExSycWInB1gCE2SiZ7Q1
      DUQDM3NzWI0SaDKC0Y7Vascg3tRw+odGKcTP0Cxesvk6k6M+Bvp95PM1ZuYXsBo7tyRqCvFU
      jlZDV4F0bqdnDqDIbcSrOZd29R/RYMZhsyBJEvValfBZCFk1fDtYTeg4gYYG2s3XVux0n1zb
      wqMHS7gtIqW6QqPexGI137it9cePcTrs2Ow2PS+Qzq30ZAoUPQ8Rz1a593CK2EmS7e1tTDYn
      TrcVSQCP28NQ3yTl/RCCwYpBAFVuEQweks/lOb1MMzns49XGSwYn5jjbe4VxaIFRn51CuUZb
      kNk9qLG0uMTO5mtEi5N7k0b2d3fJ5wucRhJY1AqpXImpucVrveAX98f1Ink/kT5/KnZ3QgWq
      VqvY7Y7fqBVdBbqdj1kF6pkDqHKLhixgs3z/bGyaKlOqNnA7HaBplEolnC73jeOfmioTj8Wx
      uf14nDZy6QSYHPjcjk42uUodt8uB3KwTT2UZGB7GJIkUCgX+aCNyW7mad9+LpnbOof6W2mmA
      dkfG2vU+wC399UwFapaSnGSNTA7acTocFEolTKJAoZhDMHsYCri4vDjD4h0k4LaDKnN8FCJd
      rvGzJ4+IR045PI3x89/5BcY37jURjSBZnAR3N5ka7eOyYkSonCOurpM+C5KuKvzsyX02N7cY
      nxxn4+UWP/tkDYC//yd7ugqkc4Oerw/Pzs8ACB6FiIT2kc0eYpFTEucH1A1uzoN7tNWOCjS3
      uITj6o0xND7DoN/9rfYGRyexim0U0UI8UWRxYYLJkQCZbIW5pRUc5o5Py4qKzeGhXa/oKpDO
      rfTMAVRFQbjaev76oSuZbQS8HoxGA6V8kXTyErkN8nvMS7LRU4KRAk8/WcNuEmjIKq2WjNH0
      5lRLZO3hPeKxKKLRpKtAOrfSMxUomsyzvPaY6FGU7e1tVNGExWpFFMBqtTI6MUwxeIHB4cAo
      CNcqUDKR5NQTx9AuEUskaUrH9Jma4JtkxGcnfBnDaHWxd3DEwtwsr1+9RDKaeThqZn93l2Qy
      xWkkgEWtUC2XGJucuZ4tzo/6u8oK8VNRLHpl1zGmq0D7Dz7WH3icd0IFyufyeLy+bsp7XaOr
      QLejq0A9QFNVVA0k6ftPQDRNRZZVjEYDqqrQaDQxmS0Y3mhD01Qa9QYGowmj0UCr2QDRgMlo
      QNM0ZFm5Yd9563Qyw706yaF18fhQVaWrrGl3xY6rM8HdRXV+4HvU1KuYnveNBn17fz1TgRqF
      KMdZI/PjXswmE41mE1EQaDRqCAYLTpuFYiGHwerEbjGBKhM6DJIs1fnFp4+4ODmipYpkChU+
      fyMWKB4+o9SQyWRyrM6NsHeeQ5Rr3Hv0hPjxAfGyzO98usb2qxeYbQ7KLZFPHnbCoP/7f/hc
      V4F0btDz9WHwKAjA1s4uZ3uviWbL7O7tkY2dcBbPs7O1hXylAs0vr+C2mwCBqbklhgMuRMPN
      MOjhiRmmRgcQRYnwRYoHjx+wMN5HMlNhbnkVj80EqDTaML+4TLuS11UgnVvpnQNo2rfeUpLZ
      xsT4OHariUwiRb1RpVVr0nrLYzlxHiR4WeTJw9Ubn5czl2zsnrL++BEmSUDVOqGugvhmZxIr
      C9Ps7+3T0gRdBdK5lZ6pQOFoksW1T4kcXrC1vU29pSE5JQQBJElieGqCfCiO0+fDJH6jAoXD
      YRweP+eHJ/iGRgidXRAwy7TtQwz77OzuHWDz9HMUOmZudoyNL58hSSKPHk+wv7tDOBLF4e2o
      QHK7yfDoxLUfumxmulny3KUUn93qBHdlrD9watC7oQIl4wkCg0NIugrUEztdBQOrs2oAAB83
      SURBVOoBSrtJQxawW7//UUZNkSmUa3g9LqqlHPFUnqGxcezmbza5VKVNJBzG6RvE57aTjl+C
      xUWf14WmyuSLVXxeN+1GlUgsxcj4BGZDJxboD78800+E/UT6/E3sOrFAP0x/vTsRVk5xmjUy
      3m/F7XKRKxQwSQL5XBbB6mWk30P4NITVO0yf14mgyRyHjslUanz2eI1avcXAQIDXG6/4+edP
      r9tNxqI4vX0c728yPhQg0bYjRvcxLK+ROQ+RqSp89uQem1s7zM3NsLHxms8/7ahIf/jnQV0F
      0rlBz9eHF+ELAELHJ0RPgoiuAVKxcxKn+yi2ASInB8ja17FAi9jNBkDAaTNxsLeH099/o73B
      0QmEVgnFYCeZLjM/O8LYcB/ZbJW5pWXs5o7Wqyoqmmik3ajqKpDOrfQwFkhGuCpJcx0LZLLi
      dTkwGAyUi2US0XNkWfx2LJCmYXZ4WV9fo5JP3findOSYs1SdTx4/wGESqbdUWs0WRvOvxQKt
      P6BULGIwW3QVSOdWehcLlCqwsjZBNBRje3sbDBas9k4skN1uZ6R/hNLBOZLNdiMWKJVKcRqJ
      0SplaMgabl+AyNE2QmCGUZ+dWCKFaHawd3DE4sIcm5svEU1WHo51YoFS6fR1LFA+V2RiavZ6
      vrg61a+fCPuJ9Pmb2cH76kB3OhaoWCjicnv0WKAe2ekqUA/QVBlZFTAavn+8h6apNFttLObO
      Afd2q4EqGDAbDTeuKZfKmCw2LGYjtWoZJDM2i6lj32xjsZhR5Tblag2H04V0VSXyy8P0bV2/
      E0VVu8ydfzfsNDqxW93EAn3osXZOhInvrQLd1l8PY4HiHGeNzI66sVosVOt1DKJArVoBow2v
      00Yuk8Jod+O0WTqxQMEgqVKdnz99jKYp7D//FVXvCj9bGbtuNx45oy6LJBN7LE4PE4xVkZpF
      ltafkDg+IFFR+MXTh2y9fonL4+XwJMLT9c5u8t/6xy91FUjnBj1fH4aOQwDs7u1zvr9FutLm
      KHhI+jJELN9gf3fnm1igpRVcts6+QTJ8gm9kCunXXnXD4zOM9LnRBCORSIb7D5eZHe8ndRUL
      5LYaAZVmW2NiepZ2taCrQDq30jMH0DT1upjxmyfCRkeGsVqM5FIZypU87Xr7W7FAqtzk5dY+
      2WSMyNkZ7Tf+rZgK8+ogzJMnj7AYBGRVQ1FUxBth1xL3VuY52D9AFiRdBdK5lZ6pQJFYisW1
      p1wGL9je3qYpCxiNRgQBjEYjI6NT5I+i2D2eG7FAl5eXODz9/JXf+9ehmoKYQu7iCMU5wrDP
      zmHwGKvLz+FRiPnZCTaevUAySKyvd2KBLi/jN2KBRsYmr+eLfW4baldToLsUKfMxRAP9cHZ3
      QgVKJ1P4+wcQdRWoJ3a6CvQRUCgUOE3Vu7JVFQVR6uL00h2xg98gX/+HvkdVRRS7OBF2S389
      U4HquQgnORNLUwEkUURRVQRAURQQJYySSLvdQpCMnSOPqszR4SGJUoPf+fQxuy++pGm04fUP
      MD02eN1u7OKYZL5CpdpkbXmCl3vnSKisP/2Ey6M9EmWF3/l0jd3XL2ipApg9rK/OAfDX//af
      6iqQzg16uj7UNI29/T0ANl69JrT1gt3QCV+9eEUhdcGr7QOeb7xC0b4+EbaKx95RgaqtJpIg
      4HY5b7Q5PDHL6tI8BlHjNBRh/bOnLE30kUhXmF++d30irNYSeLj2iGY5o1eK17mVHjrAtx+1
      ktnGwsISboeZZCSKKgo0SmUab1mZPv38d7m/ukRwb+fG57Viiucvd1l5sI5RutoQEX69N4np
      iUF2d/eoNnURVOd2ejIFioVPCIejzDz4lMvDU3Z2dynX2vht35wNGBgfJX+exT84iFkU0JQW
      R0dHXJxf4PL2XcUCqRisTvKJCxrmPoa8Nl5vvMIWGCYSvmBiaohXX71AQmHt8TiH+/tcXJzj
      8vdhVtqgygwOj+kyqM6t9GQRrKqdSYcoimhaJz3KN4cRBL5+XmuaCgjXK/qv7QSh89nXC7NY
      JMzA2DiGq8++HnKn/Y68JQqd7e5v7LlO9SFcpUVxOJ1dFWe+K2pO1yoQnb0UQxeL0g89VkVR
      rr/TH6K/j0oFqski3WjIiiIjSd18WXfDjisHkLpwgA89VlXtpNx83wfZbf31LhaoGCdcMDI/
      Efh+BprCaeiIVKXNp+v3SUVOiaSL+PqHmRoduL4sETklni3RkuHB0jivtkOIkoH1Rw+JHh+S
      rGp8ur5KaH+Lcr2F2T3Iymwnlug/+m//SFeBdG7Qu1AIRabZktk72ANN49XrTULbG2xsbvEX
      z19RycX54svnfLWxdZWvU2Rseg6bEdAUziJxLGYjXs/NDNF9wxM8vH8P2lWOD05ZfvyE6QEH
      sUyF0ek5bAYAmWJVYW39MdVsXFeBdG6l5yqQIndUmLYsI0gmllfv47QaiJ6eIpjMFJIJaqoG
      goDx6zmaplBrKMzPz7P9+uWNVtVWlS//4gumlh4iAEZJwGCQkNvqN/ZIDPjtbG3vkC/XeneL
      OneenjhAIZvm9DyGL+BGaTW4jFxQrn0d0taZu/kHB3A6XCwsL2IRBTRVIZ1KkM/nyZeb9Hut
      RONJDCYLlVySdLGzi7v5coOhyRm0Vp2xMT/7uyHOohn6/TZSqWTHvljB5nDR53UyMDSsq0A6
      t9KTRXC1VKCFAa/LQbNWodxQsFvNSKKAwWSm3WpiMpko5rNgsOB22kFTyWYyyKqG2erA47SQ
      zeZwevzEL04YnJzFYhCpFPNU6k0EyUhfwEe1mAejFafNRDqdQVE1zDYHNiMUK038AR/SlQpU
      ab//QQoAWVG6U0juiJ1GJ1Sgm0Xwhx6rchUK8b6L4Nv6+6hUIKfLpcugb0FDu3KAn/5Yf2gZ
      tId5gdLEygYmh73fz0BTiV6ckqrIrC3PETo6oNaUyVda/O7nn1xflo5dcJnKg2jm3uI4rzf3
      EU1WHtxfIRk+JlnRWF+dJ3xySKZQxjMwwfRoJ7XKv/mf/31dBdK5Qe8KZbcblKtNjk+OQdPY
      2z/g/HCbl5tbvNjco1HO8vz5C17vHF5tZml4+kaQtBaIEnOLqyxMDOD23cwL5A4M8fDBfdRG
      gaPdAybvrTPiEolly3gCQxjUFqCQytdYW39M6vKsm8KQOh8JPV8f1modFaZSrSIrGkur9zFJ
      MuFQENHmJHMZvlKBJOx26w3bw+MIi7PjNz4ziCovn32Ff2wORQW7RcRsMdNqyNjttuvb8tgk
      trZ3KFbqugyqcys9mQI1m00yqQwO3xyFSoxqOfdGLFBnAeP0uFFFN4MrS5gEAU3rzEMVRUFR
      VOR6FsXsxWIUaVYK1LDgdVjY3XzN1MoabpuJspzl9DyFWMgxOD/WsVVVFEWjf3SSEVGlrYp0
      FyGv8zHQk0VwOh6mppqZGBmgnEuRKDYJeF2YJQGzw0W1UsLpcHB5foJqdjM+1Adqm1AoREvW
      cHr76fdYwWjDahIJ7e8wNLuCwySRjJ6TzlcQjRbm52ZIR8/A4mPIbyN4GKKtaji9ffhsItFU
      kdm5GQxXaVFOkt3tCXTCBLpI/XFH7KD7AzEfeqyqql6FQvww/X1UKpB+JPLtfMxHInumArVr
      edJVieE+1/e00MgmoiTLbZbnpkhFz4ml8/gGxhkf8l9fVUjHuYglMVrdLM6MsLu9i2hxsbw4
      Sz4ZIVlWWJ6bJBU9J5rMMjA+y3CgE07xH/6N/6e71IhoXcmnd8WuY8mdGKt2XebwPVMj3tJf
      zxxAblTIFozIjQLjo2Mcn55hFVqkyk0ko42l6UF29o4wO30sz00iaAoY7bTqYUDh/DLN4yeP
      eP5844YDGG1O7t0bZPvVM4538/hnVlATR8TzFSwGK61aAlAIx3Osrz/kq2cbDAU66dVThaou
      g+rcoOcqUKFQACCby1GvN1lYuY8m1wgfHeIeGqeSjndOhIkG/H5v59yAJmI3KrzYeIHB5rnR
      ns1q4XD7JSbvCI2Wis9pwum0Uas08ft9V5kjRCySzPbOHuWqrgLp3E5PHEBRFMrFEha7FVVV
      aDdrNFoKnddW57CL0SiRz+Zxe/3fyv6G2qbQEHj86BGNchq5WafW6MQSHe1u4hlbYHlmjEGf
      hWiqTDZXwu2xv9GAwOzSPVaXZvF5PboKpHMrPVkEJyKnFBoi87OTZBNh0qUmTqcTl8WAzROg
      mM/g87g4PjpCM7mYmx4DpU0weEil3sQ/MIbPohGOpRkYm6R4GSIwcw+f3UT45JB8pYlgtLC8
      MMvFcRDB6mVq1M/B3iHVRgv/4Cgek0w0XWR6bgG72UChUOCLg5ReKPut3J1C2ZqmXi2Af5hC
      2XdABer+y3kTXQW6HV0F6gFyo0yhIRK4MTV5Fxq1coFUscHk6CCFdIKLWIapuXlcNvP1VfVK
      kdOzC+zeASaGA5wcHSJYPUyPj1Cv5EkVGkyODVHKJTmPJBmbmcfrsADwX/wvv7o6fPN+3K3i
      EV2mz9M0uinA8MHH2mVmxNv666EMWiCeNSI3ywz2D3AZjWEWZNLFCpLFxexYH4cHQSyefqbH
      hhA0hVyhSiabYXLIz9FFgrX7izx/uc3nnz25brfeaDG3tMLuq2dQTiL4JyF1TKrspZ0vksmV
      mRzrJ3gcZm3tHs82tvj8s44KtH2a1FUgnRv0XAVKpTo1vqLxOIVcluGpeerlLNHjQ/wTC9Sy
      cVqqCqKB0bFRTJIIgojQrnIYOqNaq95oz+sPEDvZR7D3Uaq0GO5z4ve7KRXqjI6PY5IEQETS
      mhwET6hU63p6dJ1b6ckbQNM0mo06BpOdVl1DVRVUVUMQDZiMRkRRpN2ucX6wh91g+ParVzSw
      9uRTNFWmUW+iKgoqAgZJ5CK4hewY5eGIn+jhFtlSC61cw9439EYDAg8efYqmKdQbTf1EmM6t
      9MQB4uETUkWZlVUfSTXD3sEhHl8Aj9OMQYRAIEC/30N1/wiMVgwC1+nRy+Uyp5EEFrVCKt8p
      fXq6/xr72ApDHistBerZKDulLMvzyxzu7iFY3Sy5Dezv7lIuVziNJLAJdZKZIjPzS9dTxt/7
      fOFtCeu+E1VTEYXuyvncBTuNjrpyF8aqXqlA77uLfFt/d0IFajZbmM3m7770Hegq0O18zCpQ
      zxxAadWptgVcdsv3tinlkoQTBRYW5hHkOqGTMFPz81gM33iuqrQ4Pgrh7h9jwO8idnECVh/D
      /V40pU06V6a/z0erXiZ0esnM/AIWo0ihUODv/MmRXib1J9LnT8Wud0ciKxkuskZGAiZ8Hi/p
      TBaTpJHLFxAsbiaGfJweh7B6Bhnq86LJDXIVmfmpIV682sQo11m+f49XLzf52dP163aT8Tgj
      03Psv36BUvCSN/QhREOY7ffJhU/I1hT6+zy83trjwYMVXrx4yS9+1lGR/njjVFeBdG7Q8/Xh
      5eUlAKfn5yTCZ1gDI+RTUWInBxg8oyTDJ7Q1DdFoYWy4j4P9fcZGR8Box253YhTlG+0NjoxT
      TUfRTG7SuRpT4wGGBvzkczXmFpewGTu39LWs2m7WdBVI51Z6dyZYbiNe1Qi+LpJntOCy25AM
      ErVKhcvwCbIqoqKhqTIvn79gdO4+Y4M+0JROkK5287WVOD8kURV4vLaCyyJSbSg0Gk3MVtMb
      V4msP3qEJApYbDZdBdK5lZ4VyYtnyqw+nCJ6nGB7exuD2Y7daUUSwOVyMdw3Tmn/BNFsxSAI
      yPUqTUXl8ixEbWCU8UE3Lzde0j8+w8X+a6TBeUZ9djL5EqrUYvfgiKWFBbY2XyNa7DyYMLG/
      u0s2m/tGRcqVmJyZv9YLni6N6GuAn0ifPxW7O6EClcsVnE7nd1/6DnQV6HZ0FagHqEqblixg
      MX//m2zUyhRKdfr6+5CETiYJu91xY59MUxUy6TQWpwenzUIxnwGjDbfDhqYqVGtNHA4bSrtB
      OlvE39ePUeqcCf5nm7Hu7qXbAnJ3xO7H6LNru273AW7pr2cOUM9FOM4amRp24LDZKVUqGEWB
      UqmAYHbR73WQiEYwu/rwumyo7QbHZxGcdhPRTJURr5mDkyi/+OXvYHxj3PHwGYrBwuX5GbPj
      A5wVVMRqhtkHj0idBklVZD7/5AEvnz9ncHiIcKLAZ48fUCgU+Pf/m3+qq0A6N+j5+vD09BSA
      g8Mg4eAuNaxcnIVIXgQpyGaOD/eQ1Y4KNDc3S7WYxe3xMzQ+w1DA8632Bscm8dokFNFMNJ5n
      ZXmWqdE+0pkKc0srOC1GQKPVVgn0DyPXSroKpHMrvasPcFXJA95Qgcw2Bvr8mE1Gitk8+WyC
      dkulrWlomsLWiy8x+6eYmxi4td18/JydkxSffrKOzSjQlDVkWcFgfHOqJbH2cIWT42M0yaSr
      QDq30jMV6DKRZXntCZfBCNvb28gYMJstiAJYLBZGxwcpBMMYnU6MooBcL5Iu1RES4Y4EWssS
      jcdpSjYGzC1U7wQjPjun52Esdg97h0cszE3z6uUGktHIw4cW9nd3iMeTOLwBLGqFVqPG6MT0
      9WxxYsCtZ4W41barMPsfZazdcFt/d0IFymayeP2BqwPv3aGrQLejq0A9QNM0NI2rsvbfD1Xt
      pEXsDLQztZEkw402NE1DkWUESepUoJdlEEQkqVMxUlW1qz+rnamRwXBdJXI3XKSrInmqgtTF
      +dW7YqddHTuVuskM94HH2skM9/4q0G399a5IXv6S46yRhUkfJoORZruNJHTyhgqSCZvFRLVS
      RjJbsZiMqO0G+wdBQEMxOnFKTWotlWK1xedvxALFwydkyw0KhTL3F8fYDiUQlSYPP/mEaGif
      eEnml5+ts/PqORjMNLHy5MEiAH/j//hSV4F0btDz9eHh4SEAm1vbnOy84iyWZnN7h1z8lOBZ
      jNevt1CuVKDV+/fxu61IkpHp+WUmR/oRf62qx/DELAvT40iSyMVZgrVPHrE42U8iU2V++R5e
      uxlQqbcEVu49oF3J6XmBdG6ldw6gad+abUhmG9PT0zhsJtLxJE25Satao3lVH+Bw6yVFxc7K
      3DipSIj98zSP1+7daKOSi/FiO8TD9XVMktBRmL51nltiYW6cvb19Gko3iVB0PhZ6pgKFLxMs
      rH1K5OCMre1tqg2FPkfH30RRZGhinNxJApc/gEkUaFfzhCIpxseMXCZNBHeCBIZHOT4L029V
      aVoHGPbZ2draweod4PjklNnpUTa+fIYkwqPH4+zv7nBxEblSgaoo7SZDIxPXDmAxGVBVfQ6k
      8w13QgWKR2P0D48g6SpQT+x0FegjoFAokK58nZ7x/VAUuasCcnfFDjRURf3WequXfXZrp6pK
      52zvezrAbf31TgUqxDjLG1ia6v/uiwG13WRvfx9ZUbB6BrEoJQrVJrJg4fGDpevr4hfHJPIV
      6k2ZteUJNrZPkUSB9SePuDzaI1nV+PzJAw53XlFrKRjsAe4vTgHwn/yPf6yrQDo36GkohCyr
      7OzugKbxYuMlwdfPeLG5xZ99uUEpc8lffPmcL56/QtU0BIOJ1fsPmZkYolatMz49z8TIYEfn
      f4PB8RkerC4jqW1Ch+c8ePoJ8yMe4ukK04srOM0SIFOua6ytP6ZeSOoqkM6t9FAG7Txqv55h
      qZqGZLKysvoAj8NE/PwC0WSmms1RUzUEAS5Ce4SiZR6uztFu1Eik8xgMN1/LrWqeL59tMLf6
      EIMoIImdRbWqqp3U6gAYGB30sL2zS7HW6t0t6tx5euIA6USUw+MIff0elGaN4+MQ5Vr7xjV9
      I0OYTSbGp6ewiAJyrcj+WRyvw0Q2l+cyFsdsMdNs1imloyQLnfper1++xNc/QCmfZWy8n+1X
      uxxfZhjw2whfnJNIJkik80gGE3aLkcGhET0YTudWerIIbjZqKJqEzWqm3WrSbKuYTAZEASTJ
      iCy3MRgM1GtVEI1YLSbQVCqVKhpgNFuQUGk021jtduLhMwbHpzFJAs16jWa7E/7gcNhp1Wsg
      mbCYJMrlChpgMJowSQL1Zhu7w454FQqhSebuKsUrMoZuqqjfETuNKxXoDoxVUa8qxb/n93hb
      fx+VCiSZrN994VvoxBS9v0JyV+ygU9RE6kIF+tBjVZTOya73VbNv669nKlCzlOSyZGBm1P/d
      FwOa3OLg4IBmu41nYJKpET+nO8+o2Ke4P/3N+YBU9JxouoCiGbi/NM7rzUNEo5mHa/eInx2R
      qmg8frDE2dEe+XINh3+U+clO3tB/97/+v3QVSOcGPZseq3KLWr1N8CgImsb2zi6ne695ubnF
      Vy+3qRVTfPXsBRube52FsmhgfnmV5YVp0qkk1UKShiJRb9xcO/gGRnn44B40S4T2jphde8S4
      z0QsU6F/eAKToAAy2VKTtfXH5JPhbtKB6nwk9Hx92Gw2Aag3GqhILK3ex2bSiBwfoUhGkhfn
      VBUNQRTIxs55uXfO2r0FQqcxZqdG+LqE59cIWotnX3zB0MwyqgZWk4jJbKLdkrFYvs4fKuF3
      mdna3iFf1ovk6dxOT6ZA1UqJeDSJe2iJbPiSbCZBudbGbzPxdaE8b6APQfAwPTyARRJQGmUO
      zlM8eriK3G5jMUscHB4RyRhYHrHREm34nVa2NjaYXHyA3WzAMezh6CiCWMkwvjRGpVKhXq9T
      b7TwBgbxqG0UjHqRPJ1b6ckiuJBJUteMDPX5qJZy5CptPE47RknAaLXTqFWx2ayk4lE0o4OB
      gAdNaROJRJBVcHn76PO5QGlRbmr/f3vn2tM4loThJ3diIOlAgA7h0oR7N6PZmS/79/rXrbTS
      zACBAElIgu3cyM25244Tn/1Ab68WOmGHlVqajp9vkVyqss55c+zjqjrUlByx/RMkn5tWrYLW
      G+L2+tnZ3kKrlyEQIhoKIssKY1sghSKEF1zUWgO2tuN43U+7QNWOxdtSId72gvhXsXsqiLHf
      Vtjyve/xjbtA0/x9FYCu618fV35EBoMBkiS9KRnurzKR3ywAIRDibQcRfu9YbftLX6A/nQv0
      igB+dJxs0Ok8lZLab9wG/b6xTiZfVgAnG/TP8f8IwOHHxckScJhr5k4AXa2OXHr9uFTL6JPN
      ZunrI4QQqA852n39f/KhdzW0ng4IykqBZmfwqg2AVq9QUMrYAvrtBgW18vo3DCGoFB8oPTYB
      GPY08nKRmQu7EHS1BqMvLfPqFZVqo/0Ue08j/1BkWuFcv93AHAMIGtUiBbWMEGAMOtznlal2
      9tik1el9/d1t1egZY4Q9Rink6A6nvH8KQbPZ/DJeglpZRa3UAdAaVYrVxrfHUgi0VhNbgGUM
      yGbvGRgWQgjK6n/GZK4EMDa7pDJFfHqNTLk189pS+ZFY7D2XFxfkUucIKULm6gJzMntKCmGT
      TP7Og1xCzaYYehZ5uL1gOJ5t162pFDWT1bCEZfZIZlQkutzmqjPtqnKa7mQBs3aPXO9wkbon
      7B+RTKtTbdqNKqnkOR0TOuV7Sj1oKWnqnS5/XGUJBSyuM/ILu55W4yb5Gw0d9L7GcOJHEm1u
      cyXOL+9YDXk4v8q8dDg2SWcL5PM5AGxLJ/X7P8g/9rm/vsS9tELy/I9vir2iFri4vkUANTlL
      2/KxFPRjdmtk1RZWU0ZpvvyDqZUVLq+uGU0EF+eXvI9tkDy/oHx/Td+1xMNdksFoMl8CGHUa
      LL/fZXP/A93y48xrd/f2aFVVliNR2vqYnfUVohGJ7rOs1ueo2RTxg1PcgNYbsr2xRnw9RKNj
      zLRTVAVz0OEunaXdeGRlfYu1zQSDTmWm3XL4HbVigVLLQHINWX63zmosgdmbfn/v1mJ8iD8V
      KlVqXRJ7m2xtb/BYKBCMbhLdiGP22i99RdbZ335KKwkurRCLLiIXW0TDHvzhKJHVTWyj+9Kh
      N8Dp6QkBrwsQZNNpDo6PANBGNvG1CKs+L99aJ2M7CTZWnlrjy0qJQadGOpNHazVYi++yt79D
      rVx/Ybce32Vz7am37JLkI313h29xmVLH4HBrjVgkjDYw5ksAbv8Ctqkz0XXcwdmJcZmrc6zA
      Kj+dJHC7YCxgbI3xz0rgskdkC2UelTwPioqNG8u2MU2LQMA309/CgsSHw1OOtyNUNYPRyERM
      TNye2adj1h4r7J/+zKfEBtWmzngyQtgmLrd/pt2/Cfo96OaEkTFiIRzCNk3syVPjsVlMzB7/
      /C3Jx1//TjS8iG2NENivliqOjR5yuY5ceECRZbyAZQtMF7wWsbS4xOHpGXFphDYJMDIMRrqO
      T5o9lp3hmL/98gu23iHgcqGPBebEIuDz4vn8+fPnV/z+EBiGwWJohUYph1LpcPrxCL93uv4z
      dzcgBJ2hxX48yuX1LQTesROLTh9jl4fEwQFrqxECwRD7W2ukUreY7kUSW+sz50Y4vEz65oZW
      3+L44ye61TxK8ZHD0zMWfNPj9HncFPJ5tJ5B4ugYUytRkEskTs6QppzN0Kgo5OQi7a5O4mCX
      XCpF24DjkyOGDRW5WGXv8ATpmWi1WolsQaHVGeAeD2kPLYbdFv7lKK5hk/yDws7BR5aC/z2V
      J6MhN6kbavUGgdA6v/58RjQcJBDZZGd1gdRtmkAoSiwaeRGrmk+jlqsMjAmJxBZ3qRv6Isin
      owSVQppic8jZ6T7eZx0Iy/I9crGC7Qmy6LVQS1UCSxFO9uMkk9dYHom9rQ1nG9RhvpmrRyAH
      h+c4AnCYaxwBOMw1jgAc5hpHAA5zjSMAh7nGEYDDXOMIwGGucQTgMNc4AnCYaxwBOMw1/wI+
      B9YqrIOB0AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
